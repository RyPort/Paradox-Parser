// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.6.1
// source: usercmd.proto

package deadlock

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CInButtonStatePB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Buttonstate1  *uint64                `protobuf:"varint,1,opt,name=buttonstate1" json:"buttonstate1,omitempty"`
	Buttonstate2  *uint64                `protobuf:"varint,2,opt,name=buttonstate2" json:"buttonstate2,omitempty"`
	Buttonstate3  *uint64                `protobuf:"varint,3,opt,name=buttonstate3" json:"buttonstate3,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInButtonStatePB) Reset() {
	*x = CInButtonStatePB{}
	mi := &file_usercmd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInButtonStatePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInButtonStatePB) ProtoMessage() {}

func (x *CInButtonStatePB) ProtoReflect() protoreflect.Message {
	mi := &file_usercmd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInButtonStatePB.ProtoReflect.Descriptor instead.
func (*CInButtonStatePB) Descriptor() ([]byte, []int) {
	return file_usercmd_proto_rawDescGZIP(), []int{0}
}

func (x *CInButtonStatePB) GetButtonstate1() uint64 {
	if x != nil && x.Buttonstate1 != nil {
		return *x.Buttonstate1
	}
	return 0
}

func (x *CInButtonStatePB) GetButtonstate2() uint64 {
	if x != nil && x.Buttonstate2 != nil {
		return *x.Buttonstate2
	}
	return 0
}

func (x *CInButtonStatePB) GetButtonstate3() uint64 {
	if x != nil && x.Buttonstate3 != nil {
		return *x.Buttonstate3
	}
	return 0
}

type CSubtickMoveStep struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Button             *uint64                `protobuf:"varint,1,opt,name=button" json:"button,omitempty"`
	Pressed            *bool                  `protobuf:"varint,2,opt,name=pressed" json:"pressed,omitempty"`
	When               *float32               `protobuf:"fixed32,3,opt,name=when" json:"when,omitempty"`
	AnalogForwardDelta *float32               `protobuf:"fixed32,4,opt,name=analog_forward_delta,json=analogForwardDelta" json:"analog_forward_delta,omitempty"`
	AnalogLeftDelta    *float32               `protobuf:"fixed32,5,opt,name=analog_left_delta,json=analogLeftDelta" json:"analog_left_delta,omitempty"`
	AnalogPitchDelta   *float32               `protobuf:"fixed32,6,opt,name=analog_pitch_delta,json=analogPitchDelta" json:"analog_pitch_delta,omitempty"`
	AnalogYawDelta     *float32               `protobuf:"fixed32,7,opt,name=analog_yaw_delta,json=analogYawDelta" json:"analog_yaw_delta,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CSubtickMoveStep) Reset() {
	*x = CSubtickMoveStep{}
	mi := &file_usercmd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSubtickMoveStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSubtickMoveStep) ProtoMessage() {}

func (x *CSubtickMoveStep) ProtoReflect() protoreflect.Message {
	mi := &file_usercmd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSubtickMoveStep.ProtoReflect.Descriptor instead.
func (*CSubtickMoveStep) Descriptor() ([]byte, []int) {
	return file_usercmd_proto_rawDescGZIP(), []int{1}
}

func (x *CSubtickMoveStep) GetButton() uint64 {
	if x != nil && x.Button != nil {
		return *x.Button
	}
	return 0
}

func (x *CSubtickMoveStep) GetPressed() bool {
	if x != nil && x.Pressed != nil {
		return *x.Pressed
	}
	return false
}

func (x *CSubtickMoveStep) GetWhen() float32 {
	if x != nil && x.When != nil {
		return *x.When
	}
	return 0
}

func (x *CSubtickMoveStep) GetAnalogForwardDelta() float32 {
	if x != nil && x.AnalogForwardDelta != nil {
		return *x.AnalogForwardDelta
	}
	return 0
}

func (x *CSubtickMoveStep) GetAnalogLeftDelta() float32 {
	if x != nil && x.AnalogLeftDelta != nil {
		return *x.AnalogLeftDelta
	}
	return 0
}

func (x *CSubtickMoveStep) GetAnalogPitchDelta() float32 {
	if x != nil && x.AnalogPitchDelta != nil {
		return *x.AnalogPitchDelta
	}
	return 0
}

func (x *CSubtickMoveStep) GetAnalogYawDelta() float32 {
	if x != nil && x.AnalogYawDelta != nil {
		return *x.AnalogYawDelta
	}
	return 0
}

type CBaseUserCmdPB struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	LegacyCommandNumber        *int32                 `protobuf:"varint,1,opt,name=legacy_command_number,json=legacyCommandNumber" json:"legacy_command_number,omitempty"`
	ClientTick                 *int32                 `protobuf:"varint,2,opt,name=client_tick,json=clientTick" json:"client_tick,omitempty"`
	PredictionOffsetTicksX256  *uint32                `protobuf:"varint,17,opt,name=prediction_offset_ticks_x256,json=predictionOffsetTicksX256" json:"prediction_offset_ticks_x256,omitempty"`
	ButtonsPb                  *CInButtonStatePB      `protobuf:"bytes,3,opt,name=buttons_pb,json=buttonsPb" json:"buttons_pb,omitempty"`
	Viewangles                 *CMsgQAngle            `protobuf:"bytes,4,opt,name=viewangles" json:"viewangles,omitempty"`
	Forwardmove                *float32               `protobuf:"fixed32,5,opt,name=forwardmove" json:"forwardmove,omitempty"`
	Leftmove                   *float32               `protobuf:"fixed32,6,opt,name=leftmove" json:"leftmove,omitempty"`
	Upmove                     *float32               `protobuf:"fixed32,7,opt,name=upmove" json:"upmove,omitempty"`
	Impulse                    *int32                 `protobuf:"varint,8,opt,name=impulse" json:"impulse,omitempty"`
	Weaponselect               *int32                 `protobuf:"varint,9,opt,name=weaponselect" json:"weaponselect,omitempty"`
	RandomSeed                 *int32                 `protobuf:"varint,10,opt,name=random_seed,json=randomSeed" json:"random_seed,omitempty"`
	Mousedx                    *int32                 `protobuf:"varint,11,opt,name=mousedx" json:"mousedx,omitempty"`
	Mousedy                    *int32                 `protobuf:"varint,12,opt,name=mousedy" json:"mousedy,omitempty"`
	PawnEntityHandle           *uint32                `protobuf:"varint,14,opt,name=pawn_entity_handle,json=pawnEntityHandle,def=16777215" json:"pawn_entity_handle,omitempty"`
	SubtickMoves               []*CSubtickMoveStep    `protobuf:"bytes,18,rep,name=subtick_moves,json=subtickMoves" json:"subtick_moves,omitempty"`
	MoveCrc                    []byte                 `protobuf:"bytes,19,opt,name=move_crc,json=moveCrc" json:"move_crc,omitempty"`
	ConsumedServerAngleChanges *uint32                `protobuf:"varint,20,opt,name=consumed_server_angle_changes,json=consumedServerAngleChanges" json:"consumed_server_angle_changes,omitempty"`
	CmdFlags                   *int32                 `protobuf:"varint,21,opt,name=cmd_flags,json=cmdFlags" json:"cmd_flags,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

// Default values for CBaseUserCmdPB fields.
const (
	Default_CBaseUserCmdPB_PawnEntityHandle = uint32(16777215)
)

func (x *CBaseUserCmdPB) Reset() {
	*x = CBaseUserCmdPB{}
	mi := &file_usercmd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CBaseUserCmdPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBaseUserCmdPB) ProtoMessage() {}

func (x *CBaseUserCmdPB) ProtoReflect() protoreflect.Message {
	mi := &file_usercmd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBaseUserCmdPB.ProtoReflect.Descriptor instead.
func (*CBaseUserCmdPB) Descriptor() ([]byte, []int) {
	return file_usercmd_proto_rawDescGZIP(), []int{2}
}

func (x *CBaseUserCmdPB) GetLegacyCommandNumber() int32 {
	if x != nil && x.LegacyCommandNumber != nil {
		return *x.LegacyCommandNumber
	}
	return 0
}

func (x *CBaseUserCmdPB) GetClientTick() int32 {
	if x != nil && x.ClientTick != nil {
		return *x.ClientTick
	}
	return 0
}

func (x *CBaseUserCmdPB) GetPredictionOffsetTicksX256() uint32 {
	if x != nil && x.PredictionOffsetTicksX256 != nil {
		return *x.PredictionOffsetTicksX256
	}
	return 0
}

func (x *CBaseUserCmdPB) GetButtonsPb() *CInButtonStatePB {
	if x != nil {
		return x.ButtonsPb
	}
	return nil
}

func (x *CBaseUserCmdPB) GetViewangles() *CMsgQAngle {
	if x != nil {
		return x.Viewangles
	}
	return nil
}

func (x *CBaseUserCmdPB) GetForwardmove() float32 {
	if x != nil && x.Forwardmove != nil {
		return *x.Forwardmove
	}
	return 0
}

func (x *CBaseUserCmdPB) GetLeftmove() float32 {
	if x != nil && x.Leftmove != nil {
		return *x.Leftmove
	}
	return 0
}

func (x *CBaseUserCmdPB) GetUpmove() float32 {
	if x != nil && x.Upmove != nil {
		return *x.Upmove
	}
	return 0
}

func (x *CBaseUserCmdPB) GetImpulse() int32 {
	if x != nil && x.Impulse != nil {
		return *x.Impulse
	}
	return 0
}

func (x *CBaseUserCmdPB) GetWeaponselect() int32 {
	if x != nil && x.Weaponselect != nil {
		return *x.Weaponselect
	}
	return 0
}

func (x *CBaseUserCmdPB) GetRandomSeed() int32 {
	if x != nil && x.RandomSeed != nil {
		return *x.RandomSeed
	}
	return 0
}

func (x *CBaseUserCmdPB) GetMousedx() int32 {
	if x != nil && x.Mousedx != nil {
		return *x.Mousedx
	}
	return 0
}

func (x *CBaseUserCmdPB) GetMousedy() int32 {
	if x != nil && x.Mousedy != nil {
		return *x.Mousedy
	}
	return 0
}

func (x *CBaseUserCmdPB) GetPawnEntityHandle() uint32 {
	if x != nil && x.PawnEntityHandle != nil {
		return *x.PawnEntityHandle
	}
	return Default_CBaseUserCmdPB_PawnEntityHandle
}

func (x *CBaseUserCmdPB) GetSubtickMoves() []*CSubtickMoveStep {
	if x != nil {
		return x.SubtickMoves
	}
	return nil
}

func (x *CBaseUserCmdPB) GetMoveCrc() []byte {
	if x != nil {
		return x.MoveCrc
	}
	return nil
}

func (x *CBaseUserCmdPB) GetConsumedServerAngleChanges() uint32 {
	if x != nil && x.ConsumedServerAngleChanges != nil {
		return *x.ConsumedServerAngleChanges
	}
	return 0
}

func (x *CBaseUserCmdPB) GetCmdFlags() int32 {
	if x != nil && x.CmdFlags != nil {
		return *x.CmdFlags
	}
	return 0
}

type CUserCmdBasePB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *CBaseUserCmdPB        `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CUserCmdBasePB) Reset() {
	*x = CUserCmdBasePB{}
	mi := &file_usercmd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserCmdBasePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserCmdBasePB) ProtoMessage() {}

func (x *CUserCmdBasePB) ProtoReflect() protoreflect.Message {
	mi := &file_usercmd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserCmdBasePB.ProtoReflect.Descriptor instead.
func (*CUserCmdBasePB) Descriptor() ([]byte, []int) {
	return file_usercmd_proto_rawDescGZIP(), []int{3}
}

func (x *CUserCmdBasePB) GetBase() *CBaseUserCmdPB {
	if x != nil {
		return x.Base
	}
	return nil
}

var File_usercmd_proto protoreflect.FileDescriptor

const file_usercmd_proto_rawDesc = "" +
	"\n" +
	"\rusercmd.proto\x12\bdeadlock\x1a\x16networkbasetypes.proto\"~\n" +
	"\x10CInButtonStatePB\x12\"\n" +
	"\fbuttonstate1\x18\x01 \x01(\x04R\fbuttonstate1\x12\"\n" +
	"\fbuttonstate2\x18\x02 \x01(\x04R\fbuttonstate2\x12\"\n" +
	"\fbuttonstate3\x18\x03 \x01(\x04R\fbuttonstate3\"\x8e\x02\n" +
	"\x10CSubtickMoveStep\x12\x16\n" +
	"\x06button\x18\x01 \x01(\x04R\x06button\x12\x18\n" +
	"\apressed\x18\x02 \x01(\bR\apressed\x12\x12\n" +
	"\x04when\x18\x03 \x01(\x02R\x04when\x120\n" +
	"\x14analog_forward_delta\x18\x04 \x01(\x02R\x12analogForwardDelta\x12*\n" +
	"\x11analog_left_delta\x18\x05 \x01(\x02R\x0fanalogLeftDelta\x12,\n" +
	"\x12analog_pitch_delta\x18\x06 \x01(\x02R\x10analogPitchDelta\x12(\n" +
	"\x10analog_yaw_delta\x18\a \x01(\x02R\x0eanalogYawDelta\"\xf4\x05\n" +
	"\x0eCBaseUserCmdPB\x122\n" +
	"\x15legacy_command_number\x18\x01 \x01(\x05R\x13legacyCommandNumber\x12\x1f\n" +
	"\vclient_tick\x18\x02 \x01(\x05R\n" +
	"clientTick\x12?\n" +
	"\x1cprediction_offset_ticks_x256\x18\x11 \x01(\rR\x19predictionOffsetTicksX256\x129\n" +
	"\n" +
	"buttons_pb\x18\x03 \x01(\v2\x1a.deadlock.CInButtonStatePBR\tbuttonsPb\x124\n" +
	"\n" +
	"viewangles\x18\x04 \x01(\v2\x14.deadlock.CMsgQAngleR\n" +
	"viewangles\x12 \n" +
	"\vforwardmove\x18\x05 \x01(\x02R\vforwardmove\x12\x1a\n" +
	"\bleftmove\x18\x06 \x01(\x02R\bleftmove\x12\x16\n" +
	"\x06upmove\x18\a \x01(\x02R\x06upmove\x12\x18\n" +
	"\aimpulse\x18\b \x01(\x05R\aimpulse\x12\"\n" +
	"\fweaponselect\x18\t \x01(\x05R\fweaponselect\x12\x1f\n" +
	"\vrandom_seed\x18\n" +
	" \x01(\x05R\n" +
	"randomSeed\x12\x18\n" +
	"\amousedx\x18\v \x01(\x05R\amousedx\x12\x18\n" +
	"\amousedy\x18\f \x01(\x05R\amousedy\x126\n" +
	"\x12pawn_entity_handle\x18\x0e \x01(\r:\b16777215R\x10pawnEntityHandle\x12?\n" +
	"\rsubtick_moves\x18\x12 \x03(\v2\x1a.deadlock.CSubtickMoveStepR\fsubtickMoves\x12\x19\n" +
	"\bmove_crc\x18\x13 \x01(\fR\amoveCrc\x12A\n" +
	"\x1dconsumed_server_angle_changes\x18\x14 \x01(\rR\x1aconsumedServerAngleChanges\x12\x1b\n" +
	"\tcmd_flags\x18\x15 \x01(\x05R\bcmdFlags\">\n" +
	"\x0eCUserCmdBasePB\x12,\n" +
	"\x04base\x18\x01 \x01(\v2\x18.deadlock.CBaseUserCmdPBR\x04baseB4Z2github.com/RyPort/paradox-parser/deadlock;deadlock"

var (
	file_usercmd_proto_rawDescOnce sync.Once
	file_usercmd_proto_rawDescData []byte
)

func file_usercmd_proto_rawDescGZIP() []byte {
	file_usercmd_proto_rawDescOnce.Do(func() {
		file_usercmd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_usercmd_proto_rawDesc), len(file_usercmd_proto_rawDesc)))
	})
	return file_usercmd_proto_rawDescData
}

var file_usercmd_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_usercmd_proto_goTypes = []any{
	(*CInButtonStatePB)(nil), // 0: deadlock.CInButtonStatePB
	(*CSubtickMoveStep)(nil), // 1: deadlock.CSubtickMoveStep
	(*CBaseUserCmdPB)(nil),   // 2: deadlock.CBaseUserCmdPB
	(*CUserCmdBasePB)(nil),   // 3: deadlock.CUserCmdBasePB
	(*CMsgQAngle)(nil),       // 4: deadlock.CMsgQAngle
}
var file_usercmd_proto_depIdxs = []int32{
	0, // 0: deadlock.CBaseUserCmdPB.buttons_pb:type_name -> deadlock.CInButtonStatePB
	4, // 1: deadlock.CBaseUserCmdPB.viewangles:type_name -> deadlock.CMsgQAngle
	1, // 2: deadlock.CBaseUserCmdPB.subtick_moves:type_name -> deadlock.CSubtickMoveStep
	2, // 3: deadlock.CUserCmdBasePB.base:type_name -> deadlock.CBaseUserCmdPB
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_usercmd_proto_init() }
func file_usercmd_proto_init() {
	if File_usercmd_proto != nil {
		return
	}
	file_networkbasetypes_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_usercmd_proto_rawDesc), len(file_usercmd_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_usercmd_proto_goTypes,
		DependencyIndexes: file_usercmd_proto_depIdxs,
		MessageInfos:      file_usercmd_proto_msgTypes,
	}.Build()
	File_usercmd_proto = out.File
	file_usercmd_proto_goTypes = nil
	file_usercmd_proto_depIdxs = nil
}
